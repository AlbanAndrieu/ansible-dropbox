---
# This playbook contains common plays that will be run on all nodes.

- name: dropbox | Check user
  user: name={{ dropbox_owner }} state={{ dropbox_user_state }}

- name: dropbox | Check user home directory
  stat: path={{ dropbox_owner_home }}
  register: home_present

- debug: msg="dropbox | Path exists and is a directory"
  when: home_present.stat.isdir is defined and home_present.stat.isdir == true

- name: dropbox | Create user directory
  file:
    dest="{{ dropbox_user_directory }}"
    state=directory
    owner="{{ dropbox_owner }}"
    group="{{ dropbox_group }}"
  tags: dropbox_setup
  ignore_errors: true
  
- name: dropbox | Create base directory
  file:
    dest="{{ dropbox_directory }}"
    state=directory
    owner="{{ dropbox_owner }}"
    group="{{ dropbox_group }}"
  tags: dropbox_setup
  ignore_errors: true

- name: dropbox | Add dropbox configuration.
  template:
    src: "info.json.j2"
    dest: "{{ dropbox_directory }}/info.json"
    owner: "{{ dropbox_owner }}"
    group: "{{ dropbox_group }}"
    mode: 0644
  ignore_errors: true    
#  notify: restart dropbox

- block:        # block for installing on Debian derivitives
  - name: dropbox | Install Dropbox key
    apt_key:
      keyserver: pgp.mit.edu
      id: 1C61A2656FB57B7E4DE0F4C1FC918B335044912E

  - name: dropbox | Install Dropbox repository
    apt_repository:
      repo: deb [arch=i386,amd64] http://linux.dropbox.com/{{ dropbox_apt_repo }} {{ dropbox_apt_release }} main
      state: present
      filename: dropbox

  - name: dropbox | Install Dropbox
    apt:
      name: dropbox
      state: present
    
  become: yes
  when: ansible_os_family == 'Debian'

- block:        # block for installing on other Linux
  - name: dropbox | Install Dropbox control script
    get_url: dest=/usr/local/bin/dropbox url=https://www.dropbox.com/download?dl=packages/dropbox.py mode=0755 validate_certs=no
    become: yes

  - name: dropbox | Install Dropbox
    shell: curl -L "https://www.dropbox.com/download?plat=lnx.{{ ansible_architecture }}" | tar -C $HOME -xzf - creates={{ dropbox_owner_home }}/.dropbox-dist/dropboxd
  when: ansible_os_family != 'Debian'

- name: dropbox | Configure KDE to autostart dropboxd
  file: path={{ dropbox_owner_home }}/.kde/Autostart/dropboxd src={{ dropbox_owner_home }}/.dropbox-dist/dropboxd state=link
  ignore_errors: True

- name: dropbox | Install dropbox utilities
  apt: pkg={{ item }} state=present update_cache=yes
  become: yes
  when: ansible_os_family == 'Debian' and dropbox_utilities_enabled
  tags: package
  with_items:
   - nautilus-dropbox
   - libappindicator1

- name: dropbox | Check dropboxd status
  command: dropbox status
  register: status

- name: dropbox | Start dropboxd
  shell: dropbox start >/dev/null 2>&1
  when: status.stdout == "Dropbox isn't running!"
